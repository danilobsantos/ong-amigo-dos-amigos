generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  role      String   @default("admin")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Dog {
  id          Int      @id @default(autoincrement())
  name        String
  age         String
  size        String
  gender      String
  breed       String?
  description String   @db.Text
  temperament String
  vaccinated  Boolean  @default(false)
  neutered    Boolean  @default(false)
  available   Boolean  @default(true)
  status      String   @default("available") // available, adopted, reserved
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  animalType  String   @default("cachorro")

  images    DogImage[]
  adoptions Adoption[]

  @@map("dogs")
}

model DogImage {
  id    Int    @id @default(autoincrement())
  url   String
  dogId Int
  dog   Dog    @relation(fields: [dogId], references: [id], onDelete: Cascade)

  @@index([dogId], map: "DogImage_dogId_fkey")
}

model Adoption {
  id              Int      @id @default(autoincrement())
  dogId           Int
  name            String
  email           String
  phone           String
  address         String   @db.Text
  experience      String   @db.Text
  reason          String   @db.Text
  status          String   @default("pending")
  rejectionReason String?  @db.Text
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  dog Dog @relation(fields: [dogId], references: [id])

  @@index([dogId], map: "adoptions_dogId_fkey")
  @@map("adoptions")
}

model BlogPost {
  id          Int       @id @default(autoincrement())
  title       String
  slug        String    @unique
  content     String    @db.LongText
  excerpt     String    @db.Text
  category    String
  image       String?
  published   Boolean   @default(false)
  publishedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("blog_posts")
}

model Volunteer {
  id           Int      @id @default(autoincrement())
  name         String
  email        String
  phone        String
  availability String   @db.Text
  experience   String?  @db.Text
  areas        String   @db.Text
  status       String   @default("pending")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("volunteers")
}

model Donation {
  id            Int      @id @default(autoincrement())
  amount        Decimal  @db.Decimal(10, 2)
  currency      String   @default("BRL")
  paymentMethod String
  paymentId     String?
  donorName     String?
  donorEmail    String?
  recurring     Boolean  @default(false)
  status        String   @default("pending")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("donations")
}

model Contact {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  subject   String?
  message   String   @db.Text
  status    String   @default("unread")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("contacts")
}

model Stats {
  id          Int      @id @default(autoincrement())
  dogsRescued Int      @default(0)
  dogsAdopted Int      @default(0)
  updatedAt   DateTime @updatedAt
  donations   Decimal  @default(0.00) @db.Decimal(12, 2)
  volunteers  Int      @default(0)

  @@map("stats")
}
