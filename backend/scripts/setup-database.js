const { PrismaClient } = require('@prisma/client');
const bcrypt = require('bcryptjs');

const prisma = new PrismaClient();

async function setupDatabase() {
  try {
    console.log('üöÄ Iniciando setup do banco de dados...');

    // Criar usu√°rio administrador padr√£o
    const adminEmail = 'admin@amigodosamigos.org';
    const adminPassword = 'admin123'; // Alterar em produ√ß√£o
    
    const existingAdmin = await prisma.user.findUnique({
      where: { email: adminEmail }
    });

    if (!existingAdmin) {
      const hashedPassword = await bcrypt.hash(adminPassword, 10);
      
      await prisma.user.create({
        data: {
          name: 'Administrador',
          email: adminEmail,
          password: hashedPassword,
          role: 'admin'
        }
      });
      
      console.log('‚úÖ Usu√°rio administrador criado');
      console.log(`üìß Email: ${adminEmail}`);
      console.log(`üîë Senha: ${adminPassword}`);
      console.log('‚ö†Ô∏è  IMPORTANTE: Altere a senha ap√≥s o primeiro login!');
    } else {
      console.log('‚ÑπÔ∏è  Usu√°rio administrador j√° existe');
    }

    // Criar dados de exemplo para desenvolvimento
    if (process.env.NODE_ENV === 'development') {
      await createSampleData();
    }

    console.log('‚úÖ Setup do banco de dados conclu√≠do!');
  } catch (error) {
    console.error('‚ùå Erro no setup do banco de dados:', error);
    process.exit(1);
  } finally {
    await prisma.$disconnect();
  }
}

async function createSampleData() {
  console.log('üìù Criando dados de exemplo...');

  // Criar c√£es de exemplo
  const sampleDogs = [
    {
      name: 'Rex',
      age: '2 anos',
      size: 'Grande',
      gender: 'Macho',
      breed: 'Labrador',
      temperament: 'D√≥cil e brincalh√£o',
      description: 'Rex √© um c√£o muito carinhoso que adora brincar com crian√ßas. Est√° procurando uma fam√≠lia que possa dar muito amor e aten√ß√£o.',
      vaccinated: true,
      neutered: true,
      available: true,
      images: {
        create: [
          { url: "/images/dogs/rex1.jpg" },
          { url: "/images/dogs/rex2.jpg" }
        ]
    }
    },
    {
      name: 'Luna',
      age: '1 ano',
      size: 'M√©dio',
      gender: 'F√™mea',
      breed: 'SRD',
      temperament: 'Calma e afetuosa',
      description: 'Luna √© uma cadela muito tranquila e carinhosa. Ideal para fam√≠lias que buscam um companheiro fiel.',
      vaccinated: true,
      neutered: true,
      available: true,
      images: {
        create: [
          { url: "/images/dogs/luna1.jpg" }
        ]
    }
    },
    {
      name: 'Thor',
      age: '3 anos',
      size: 'Grande',
      gender: 'Macho',
      breed: 'Pastor Alem√£o',
      temperament: 'Protetor e leal',
      description: 'Thor √© um c√£o muito inteligente e protetor. Precisa de uma fam√≠lia experiente com c√£es de grande porte.',
      vaccinated: true,
      neutered: true,
      available: true,
      images: {
        create: [
          { url: "/images/dogs/thor1.jpg" },
          { url: "/images/dogs/thor2.jpg" },
          { url: "/images/dogs/thor3.jpg" },
        ]
    }
    }
  ];

  for (const dog of sampleDogs) {
    const existingDog = await prisma.dog.findFirst({
      where: { name: dog.name }
    });

    if (!existingDog) {
      await prisma.dog.create({ data: dog });
      console.log(`üêï C√£o ${dog.name} criado`);
    }
  }

  // Criar posts de exemplo para o blog
  const samplePosts = [
    {
      title: 'Como Adotar um C√£o de Forma Respons√°vel',
      slug: 'como-adotar-cao-responsavel',
      excerpt: 'Dicas importantes para quem est√° pensando em adotar um c√£o e quer fazer isso de forma consciente e respons√°vel.',
      content: `
# Como Adotar um C√£o de Forma Respons√°vel

A ado√ß√£o de um c√£o √© uma decis√£o importante que mudar√° sua vida e a do animal. Aqui est√£o algumas dicas essenciais:

## Antes da Ado√ß√£o

- Avalie se voc√™ tem tempo e recursos para cuidar de um animal
- Considere o espa√ßo dispon√≠vel em sua casa
- Pesquise sobre as necessidades da ra√ßa ou porte do c√£o

## Durante o Processo

- Visite o animal v√°rias vezes antes de decidir
- Fa√ßa perguntas sobre o hist√≥rico de sa√∫de
- Prepare sua casa para receber o novo membro da fam√≠lia

## Ap√≥s a Ado√ß√£o

- Mantenha as vacinas em dia
- Proporcione exerc√≠cios regulares
- Demonstre muito amor e paci√™ncia

Lembre-se: ado√ß√£o √© um compromisso para toda a vida do animal!
      `,
      category: 'Ado√ß√£o',
      published: true,
      publishedAt: new Date(),
      image: '/images/blog/adocao-responsavel.jpg'
    },
    {
      title: 'A Import√¢ncia da Castra√ß√£o',
      slug: 'importancia-castracao',
      excerpt: 'Entenda por que a castra√ß√£o √© fundamental para o controle populacional e sa√∫de dos animais.',
      content: `
# A Import√¢ncia da Castra√ß√£o

A castra√ß√£o √© um dos procedimentos mais importantes para o bem-estar animal e controle populacional.

## Benef√≠cios para a Sa√∫de

- Previne c√¢ncer de mama e √∫tero em f√™meas
- Reduz risco de c√¢ncer de pr√≥stata em machos
- Diminui comportamentos agressivos

## Controle Populacional

- Evita ninhadas indesejadas
- Reduz o n√∫mero de animais abandonados
- Contribui para o bem-estar animal

Procure um veterin√°rio de confian√ßa e mantenha seu pet saud√°vel!
      `,
      category: 'Sa√∫de',
      published: true,
      publishedAt: new Date(),
      image: '/images/blog/castracao.jpg'
    }
  ];

  for (const post of samplePosts) {
    const existingPost = await prisma.blogPost.findFirst({
      where: { slug: post.slug }
    });

    if (!existingPost) {
      await prisma.blogPost.create({ data: post });
      console.log(`üìù Post "${post.title}" criado`);
    }
  }

  // Criar estat√≠sticas iniciais
  const stats = await prisma.stats.findFirst();
  if (!stats) {
    await prisma.stats.create({
      data: {
        dogsRescued: 150,
        dogsAdopted: 120,
        volunteers: 25,
        donations: 50000
      }
    });
    console.log('üìä Estat√≠sticas iniciais criadas');
  }

  console.log('‚úÖ Dados de exemplo criados com sucesso!');
}

// Executar setup se chamado diretamente
if (require.main === module) {
  setupDatabase();
}

module.exports = { setupDatabase, createSampleData };
